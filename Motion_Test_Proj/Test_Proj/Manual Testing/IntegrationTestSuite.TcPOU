<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="IntegrationTestSuite" Id="{69bc61fe-8999-4914-8ef6-bb0c95ff7655}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK IntegrationTestSuite
VAR
	StubAxis : AXIS_REF;
	TestAxis : Axis_Base(StubAxis);
	iAxisBase : I_AxisBase := TestAxis;
	iJog : I_Jog := TestAxis;
	iAxisStatus : I_AxisStatus := TestAxis;
	iPosition : I_PositionAxis := TestAxis;
	iVelo : I_VelocityAxis := TestAxis;
	Enable: BOOL;
	MOVETO: BOOL;
	MOVETWO: BOOL;
	DISABLE: BOOL;
	SETBUFFER: BOOL;
	CONVEYOR: BOOL;
	JOGSLOW: BOOL;
	JOGFAST: BOOL;
	HALT: BOOL;
	VelocityDemand : LREAL := 100.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF Enable THEN
	IF succeeded(iAxisBase.EnableAxis()) THEN
		Enable := FALSE;
	END_IF
END_IF

IF MOVETO THEN
	IF SUCCEEDED(iPosition.MoveToPosition(1000.0,100.0)) THEN
		MOVETO := FALSE;
	END_IF
END_IF

IF SETBUFFER THEN
	SETBUFFER := FALSE;
	TestAxis.BufferMode := MC_BufferMode.MC_BlendingLow;
	
END_IF

IF MOVETWO THEN
	IF SUCCEEDED(iPosition.MoveToPosition(1200.0,200.0)) THEN
		MOVETWO := FALSE;
	END_IF
END_IF

IF HALT THEN
	IF SUCCEEDED(iAxisBase.HaltAxis()) THEN
		HALT := FALSE;
	END_IF
END_IF

IF DISABLE THEN
	IF SUCCEEDED(iAxisBase.DisableAxis()) THEN
		DISABLE := FALSE;
	END_IF
END_IF

IF CONVEYOR THEN
	IF SUCCEEDED(iVelo.MoveAtVelocity(MC_Direction.MC_Positive_Direction, VelocityDemand)) THEN
		CONVEYOR := FALSE;
	END_IF
END_IF

IF JOGSLOW THEN
	iJog.JogSlow(FALSE);
END_IF

IF JOGFAST THEN
	iJog.JogFast(TRUE);
END_IF

TestAxis.Cycle();]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>