<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AxisResetTestSuite" Id="{35388208-47d1-43d3-9073-bac1bf114263}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AxisResetTestSuite EXTENDS TestSuite<TestSuiteParameter.MaxTestCount>
VAR
	_axis : AXIS_REF;
	iStubTask : I_Task;
	TestAxisReset : ResetBehaviour(_axis);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[DoesAcceptExecute_Test();
DoesTaskAbortClearBusy_Test();
DoesTaskAcceptAndSetBusy_Test();
DoesTaskClearInterfaceOnReject_Test();
DoesTaskReturnItsInterfaceOnAccept_Test();
RejectResetWhileResetting_Test();]]></ST>
    </Implementation>
    <Method Name="DoesAcceptExecute_Test" Id="{08513cf5-caba-4c77-9c71-3b8a7a80c814}">
      <Declaration><![CDATA[METHOD DoesAcceptExecute_Test : BOOL
VAR_INST
	Expected : HRESULT;
	Actual	 : HRESULT;
END_VAR

]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Expected := s_OK;
	Actual := TestAxisReset.Execute(iStubTask);
	TestAxisReset.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="DoesTaskAbortClearBusy_Test" Id="{b4acbce4-731b-4329-9277-0416ac626e31}">
      <Declaration><![CDATA[METHOD DoesTaskAbortClearBusy_Test
VAR_INST
	Expected : BOOL := FALSE;
	Actual	 : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestAxisReset.Execute(iStubTask);
	TestAxisReset.Abort();
	Actual := TestAxisReset.Busy;
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="DoesTaskAcceptAndSetBusy_Test" Id="{215a4d80-e8c0-4f6d-808b-dc5958b3620f}">
      <Declaration><![CDATA[METHOD DoesTaskAcceptAndSetBusy_Test
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestAxisReset.Execute(iStubTask);
	Actual := TestAxisReset.Busy;
	TestAxisReset.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="DoesTaskClearInterfaceOnReject_Test" Id="{50e4d835-2346-405f-84a2-7ae80f318546}">
      <Declaration><![CDATA[METHOD DoesTaskClearInterfaceOnReject_Test
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestAxisReset.Execute(iStubTask);
	iStubTask := 0;
	TestAxisReset.Execute(iStubTask);
	Actual := iStubTask = 0;
	Test(__POUNAME()).AssertEqual(Expected, Actual);
	TestAxisReset.Abort();
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="DoesTaskReturnItsInterfaceOnAccept_Test" Id="{239fffb3-7f3c-4135-95b6-b1a96fe74903}">
      <Declaration><![CDATA[METHOD DoesTaskReturnItsInterfaceOnAccept_Test
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	iStubTask := 0;
	TestAxisReset.Execute(iStubTask);
	Actual := iStubTask <> 0;
	Test(__POUNAME()).AssertEqual(Expected, Actual);
	TestAxisReset.Abort();
END_IF	]]></ST>
      </Implementation>
    </Method>
    <Method Name="RejectResetWhileResetting_Test" Id="{0b718029-0f95-45b5-9686-fbc342e36ff7}">
      <Declaration><![CDATA[METHOD RejectResetWhileResetting_Test : BOOL
VAR_INST
	Expected : HRESULT;
	Actual	 : HRESULT;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Expected := S_FALSE;
	TestAxisReset.Execute(iStubTask);
	Actual := TestAxisReset.Execute(iStubTask);
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>