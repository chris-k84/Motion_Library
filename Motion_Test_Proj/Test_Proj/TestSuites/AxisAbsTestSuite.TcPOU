<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AxisAbsTestSuite" Id="{931c3bf4-e690-4ab0-bb8d-cbf096b9e190}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AxisAbsTestSuite EXTENDS TestSuite<TestSuiteParameter.MaxTestCount>
VAR
	StubAxis : AXIS_REF;
	iStubTask : I_Task;
	TestAxisAbs : MoveAbsTask := (AxisRef := stubaxis);
	TestObjRunner : ObjectRunner;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CheckCorrectRegistration_Test();
TaskAcceptValidCommand_Test();
TaskRejectsZeroVeloCommand_Test();]]></ST>
    </Implementation>
    <Method Name="CheckCorrectRegistration_Test" Id="{c4385ca2-d3df-42c8-9370-a356405e0465}">
      <Declaration><![CDATA[METHOD CheckCorrectRegistration_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestObjRunner.RegisterModule(TestAxisAbs);
	Actual := TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetAbortModuleCount() AND
				TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetTaskModuleCount();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskAcceptValidCommand_Test" Id="{d5bc1b43-cf1a-4b0e-b9f0-4a82dce35f41}">
      <Declaration><![CDATA[METHOD TaskAcceptValidCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := SUCCEEDED(TestAxisAbs.MoveTo(100.0, 300.0));
	TestAxisAbs.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskRejectsZeroVeloCommand_Test" Id="{6092ced4-346a-4b46-85f8-d8b449d061cc}">
      <Declaration><![CDATA[METHOD TaskRejectsZeroVeloCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := FAILED(TestAxisAbs.MoveTo(100.0, 0.0));
	TestAxisAbs.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>