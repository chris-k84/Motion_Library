<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AxisModTestSuite" Id="{6a9f2095-c181-4878-b784-361c97a62c94}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AxisModTestSuite EXTENDS TestSuite<TestSuiteParameter.MaxTestCount>
VAR
	StubAxis : AXIS_REF;
	iStubTask : I_Task;
	TestAxisMod : MoveModTask := (AxisRef := stubaxis);
	TestObjRunner : ObjectRunner;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CheckCorrectRegistration_Test();
TaskAcceptValidCommand_Test();
TaskRejectsZeroVeloCommand_Test();]]></ST>
    </Implementation>
    <Method Name="CheckCorrectRegistration_Test" Id="{60c66d21-cbe0-4b18-b0d5-e77338525ebf}">
      <Declaration><![CDATA[METHOD CheckCorrectRegistration_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestObjRunner.RegisterModule(TestAxisMod);
	Actual := TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetAbortModuleCount() AND
				TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetTaskModuleCount();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskAcceptValidCommand_Test" Id="{b2a63fab-2531-4107-8183-36161e169aff}">
      <Declaration><![CDATA[METHOD TaskAcceptValidCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := SUCCEEDED(TestAxisMod.MoveTo(100.0, 300.0));
	TestAxisMod.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskRejectsZeroVeloCommand_Test" Id="{4c4b43a6-0614-4309-af14-de1d58e6c625}">
      <Declaration><![CDATA[METHOD TaskRejectsZeroVeloCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : BOOL;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := FAILED(TestAxisMod.MoveTo(100.0, 0.0));
	TestAxisMod.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>