<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="AxisRelTestSuite" Id="{17fb2fd6-f573-4d0a-9afb-f84bca683c76}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK AxisRelTestSuite EXTENDS TestSuite<TestSuiteParameter.MaxTestCount>
VAR
	StubAxis : AXIS_REF;
	iStubTask : I_Task;
	TestAxisRel : MoveRelTask := (AxisRef := stubaxis);
	TestObjRunner : ObjectRunner;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CheckCorrectRegistration_Test();
TaskAcceptValidCommand_Test();
TaskRejectsZeroVeloCommand_Test();]]></ST>
    </Implementation>
    <Method Name="CheckCorrectRegistration_Test" Id="{0e1e6947-5948-4ff9-97fd-75c449021a2d}">
      <Declaration><![CDATA[METHOD CheckCorrectRegistration_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	TestObjRunner.RegisterModule(TestAxisRel);
	Actual := TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetAbortModuleCount() AND
				TestObjRunner.GetCyclicModuleCount() = TestObjRunner.GetTaskModuleCount();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskAcceptValidCommand_Test" Id="{b41aa70b-a86c-411e-a753-699b9539763a}">
      <Declaration><![CDATA[METHOD TaskAcceptValidCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := SUCCEEDED(TestAxisRel.MoveBy(100.0, 300.0));
	TestAxisRel.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
    <Method Name="TaskRejectsZeroVeloCommand_Test" Id="{dee3319b-7afd-4544-bf1c-04cd9756e264}">
      <Declaration><![CDATA[METHOD TaskRejectsZeroVeloCommand_Test : BOOL
VAR_INST
	Expected : BOOL := TRUE;
	Actual	 : bool;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Test(__POUNAME()).ExecuteTest() THEN
	Actual := FAILED(TestAxisRel.MoveBy(100.0, 0.0));
	TestAxisRel.Abort();
	Test(__POUNAME()).AssertEqual(Expected, Actual);
END_IF]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>